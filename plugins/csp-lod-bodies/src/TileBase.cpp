////////////////////////////////////////////////////////////////////////////////////////////////////
//                               This file is part of CosmoScout VR                               //
//      and may be used under the terms of the MIT license. See the LICENSE file for details.     //
//                        Copyright: (c) 2019 German Aerospace Center (DLR)                       //
////////////////////////////////////////////////////////////////////////////////////////////////////

#include "TileBase.hpp"

namespace csp::lodbodies {

////////////////////////////////////////////////////////////////////////////////////////////////////

/* explicit */
TileBase::TileBase(int level, glm::int64 patchIdx)
    : mTileId(level, patchIdx)
    , mMinMaxPyramid(nullptr) {
}

////////////////////////////////////////////////////////////////////////////////////////////////////

TileId const& TileBase::getTileId() const {
  return mTileId;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileBase::setTileId(TileId const& tileId) {
  mTileId = tileId;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

int TileBase::getLevel() const {
  return mTileId.level();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileBase::setLevel(int level) {
  mTileId.level(level);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

glm::int64 TileBase::getPatchIdx() const {
  return mTileId.patchIdx();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileBase::setPatchIdx(glm::int64 patchIdx) {
  mTileId.patchIdx(patchIdx);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

MinMaxPyramid* TileBase::getMinMaxPyramid() const {
  return mMinMaxPyramid.get();
}

////////////////////////////////////////////////////////////////////////////////////////////////////

void TileBase::setMinMaxPyramid(std::unique_ptr<MinMaxPyramid> pyramid) {
  mMinMaxPyramid = std::move(pyramid);
}

////////////////////////////////////////////////////////////////////////////////////////////////////

} // namespace csp::lodbodies
